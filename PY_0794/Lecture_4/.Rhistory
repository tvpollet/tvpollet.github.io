knitr::opts_chunk$set(echo = TRUE)
require(haven) # alternatively use foreign.
Data_red<- read_spss("Dataset_Jo_lotte.sav")
write.csv(Data_red, 'Data_1.csv')
require(dplyr)
Data_red$Condition<-as_factor(Data_red$ColorLaptop)
Data_red<- Data_red %>% mutate(Attraction_combined= Attraction+SexAppeal+SexActivity)
ordered_levels<-c("Red","Blue", "Silver", "Black")
Data_red <- mutate(Data_red, Condition = factor(Condition, levels = ordered_levels))
# geom_box alters the width.
require(ggpubr)
violinplot <- ggviolin(Data_red, x = "Condition",
y = "Attraction_combined", color = "Condition", palette = c("darkred",
"darkblue", "grey", "black"), add = c("jitter", "boxplot"),
shape = "Condition") + labs(x = "Condition", y = "Attraction",
color = "Condition", shape = "Condition")
violinplot
ggsave("violinplot_NL.pdf", width= 140, height=140, units="mm")
ggsave("violinplot_NL.png", width= 200, height=200, units="mm")
require(plyr)
require(dplyr)
ratings_by_colour<- Data_red %>% dplyr::group_by(Condition) %>% summarize(means1=mean(Attraction, na.rm=T),means2=mean(SexAppeal, na.rm=T),means3=mean(SexActivity, na.rm=T), SD1=sd(Attraction, na.rm=T),SD2=sd(SexAppeal, na.rm=T),SD3=sd(SexActivity, na.rm=T), l1= sum(!is.na(Attraction)), l2= sum(!is.na(SexAppeal)), l3=sum(!is.na(SexActivity)))
write.csv(ratings_by_colour, "ratings_by_colour.csv")
Data_red<- Data_red %>% mutate(Condition2 = revalue(Condition, c("Red" = "Red","Blue" = "Other", "Silver"="Other", "Black"="Other")))
Data_red$Condition2<-as_factor(Data_red$Condition2)
detach(package:plyr)
ratings_by_red_other <- Data_red %>% dplyr::group_by(Condition2) %>% summarize(means1=mean(Attraction, na.rm=T),means2=mean(SexAppeal, na.rm=T),means3=mean(SexActivity, na.rm=T), SD1=sd(Attraction, na.rm=T),SD2=sd(SexAppeal, na.rm=T),SD3=sd(SexActivity, na.rm=T), l1= sum(!is.na(Attraction)), l2= sum(!is.na(SexAppeal)), l3=sum(!is.na(SexActivity)))
write.csv(ratings_by_red_other, "ratings_by_red_other.csv")
require(dplyr)
alpha<- Data_red %>% dplyr::select(Attraction, SexAppeal, SexActivity)
require(psych)
psych::alpha(as.data.frame(alpha))
Anova2<-aov(Attraction ~ Condition, data=Data_red)
summary(Anova2)
require(car)
require(compute.es)
require(multcomp)
require(BayesFactor)
require(coin)
posth=glht(Anova2, linfct=mcp(Condition="Tukey"))
##gives the post-hoc Tukey analysis
summary(posth) ##shows the output in a nice format.
Data_red_BF2<- Data_red %>% filter(!is.na(Attraction)) # exclude missings.
bf_attract <- anovaBF(Attraction ~ Condition, data=as.data.frame(Data_red_BF2))
1/bf_attract # The null is favoured with a factor 15.93
require(coin)
independence_test(Attraction ~ Condition, data=Data_red_BF2)
sessionInfo()
